import streamlit as st
from gtts import gTTS
import os
from googletrans import Translator

# =====================================================
# C·∫§U H√åNH H·ªÜ TH·ªêNG
# =====================================================
HOSPITAL_NAME = "Trung t√¢m ti√™m ch·ªßng VNVB"

# =====================================================
# C√ÄI ƒê·∫∂T GIAO DI·ªÜN
# =====================================================
st.set_page_config(
    page_title="H·ªá th·ªëng g·ªçi kh√°ch h√†ng",
    page_icon="üì¢",
    layout="centered"
)

st.title("üì¢ H·ªá th·ªëng g·ªçi kh√°ch h√†ng - " + HOSPITAL_NAME)

st.markdown("""
·ª®ng d·ª•ng h·ªó tr·ª£ ph√°t thanh t·ª± ƒë·ªông cho b·ªánh vi·ªán. ƒê√¢y l√† m·ªôt c√¥ng c·ª• gi√∫p gi·∫£m t·∫£i cho nh√¢n vi√™n y t·∫ø trong vi·ªác g·ªçi kh√°ch h√†ng. ·ª®ng d·ª•ng s·ª≠ d·ª•ng **Streamlit** ƒë·ªÉ t·∫°o giao di·ªán tr·ª±c quan, **gTTS** ƒë·ªÉ t·∫°o gi·ªçng n√≥i v√† **googletrans** ƒë·ªÉ d·ªãch t·ª± ƒë·ªông.
""")

# =====================================================
# NH·∫¨P D·ªÆ LI·ªÜU NG∆Ø·ªúI D√ôNG
# =====================================================
name = st.text_input("üßë Nh·∫≠p t√™n kh√°ch h√†ng:")
location = st.text_input("üìç Nh·∫≠p ƒë·ªãa ƒëi·ªÉm:")
closing = st.selectbox(
    "üôè Ch·ªçn l·ªùi k·∫øt:",
    [
        "Xin c·∫£m ∆°n!",
        "Tr√¢n tr·ªçng c·∫£m ∆°n!",
        "C·∫£m ∆°n!",
        "Vui l√≤ng ƒë·∫øn ngay!",
        "Ch√∫c s·ª©c kh·ªèe!",
        "R·∫•t mong qu√Ω kh√°ch h·ª£p t√°c!",
        ""
    ]
)

# =====================================================
# L·ª∞A CH·ªåN NG√îN NG·ªÆ
# =====================================================
lang_option = st.radio(
    "üåê Ch·ªçn ng√¥n ng·ªØ ph√°t thanh:",
    [
        "Ch·ªâ ti·∫øng Vi·ªát",
        "Ti·∫øng Vi·ªát + Ti·∫øng Anh"
    ],
    horizontal=True
)

# =====================================================
# H√ÄM H·ªñ TR·ª¢
# =====================================================
def generate_tts(text: str, lang: str, filename: str):
    """
    T·∫°o file √¢m thanh t·ª´ vƒÉn b·∫£n s·ª≠ d·ª•ng gTTS.

    Args:
        text (str): Chu·ªói vƒÉn b·∫£n c·∫ßn chuy·ªÉn ƒë·ªïi.
        lang (str): M√£ ng√¥n ng·ªØ (vi, en, ...).
        filename (str): T√™n file mp3 xu·∫•t ra.

    Returns:
        str | None: Tr·∫£ v·ªÅ ƒë∆∞·ªùng d·∫´n file n·∫øu th√†nh c√¥ng, None n·∫øu th·∫•t b·∫°i.
    """
    try:
        tts = gTTS(text=text, lang=lang)
        tts.save(filename)
        return filename
    except Exception as e:
        st.error(f"‚ùå L·ªói t·∫°o gi·ªçng n√≥i: {e}")
        return None


def build_vietnamese_announcement(name: str, location: str, closing: str) -> str:
    """Gh√©p c√¢u th√¥ng b√°o ti·∫øng Vi·ªát."""
    return f"Xin m·ªùi kh√°ch h√†ng {name} ƒë·∫øn {location}. {closing} ."


def translate_text_to_english(text: str) -> str:
    """D·ªãch vƒÉn b·∫£n t·ª´ ti·∫øng Vi·ªát sang ti·∫øng Anh."""
    translator = Translator()
    return translator.translate(text, src='vi', dest='en').text

# =====================================================
# X·ª¨ L√ù KHI NG∆Ø·ªúI D√ôNG NH·∫§N N√öT
# =====================================================
if st.button("‚ñ∂Ô∏è T·∫°o & Ph√°t th√¥ng b√°o"):
    if name.strip() == "" or location.strip() == "":
        st.warning("‚ö†Ô∏è Vui l√≤ng nh·∫≠p ƒë·ªß t√™n kh√°ch h√†ng v√† ƒë·ªãa ƒëi·ªÉm!")
    else:
        # --- Th√¥ng b√°o ti·∫øng Vi·ªát ---
        text_vi = build_vietnamese_announcement(name, location, closing)
        st.subheader("üìå Th√¥ng b√°o Ti·∫øng Vi·ªát")
        st.success(text_vi)

        vi_path = generate_tts(text_vi, 'vi', "output_vi.mp3")
        if vi_path:
            st.audio(vi_path, format="audio/mp3")

        # --- Th√¥ng b√°o ti·∫øng Anh n·∫øu ch·ªçn ---
        if lang_option == "Ti·∫øng Vi·ªát + Ti·∫øng Anh":
            try:
                text_en = translate_text_to_english(text_vi)
                st.subheader("üìå Announcement in English")
                st.info(text_en)

                en_path = generate_tts(text_en, 'en', "output_en.mp3")
                if en_path:
                    st.audio(en_path, format="audio/mp3")
            except Exception as e:
                st.error(f"‚ùå L·ªói d·ªãch sang ti·∫øng Anh: {e}")

        st.success("‚úÖ Ho√†n t·∫•t ph√°t thanh!")
